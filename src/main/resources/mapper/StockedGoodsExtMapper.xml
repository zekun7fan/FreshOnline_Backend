<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.freshonline.dao.StockedGoodsExtMapper">
  <resultMap id="BaseResultMap" type="com.example.freshonline.model.StockedGoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Feb 06 18:37:56 EST 2022.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="storage" jdbcType="DECIMAL" property="storage" />
    <result column="sales" jdbcType="DECIMAL" property="sales" />
    <result column="onsale" jdbcType="TINYINT" property="onsale" />
    <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="rate_count" jdbcType="INTEGER" property="rateCount" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="is_new" jdbcType="TINYINT" property="isNew" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="active" jdbcType="BIT" property="active" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.freshonline.model.StockedGoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Feb 06 18:37:56 EST 2022.
    -->
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Feb 06 18:37:56 EST 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Feb 06 18:37:56 EST 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Feb 06 18:37:56 EST 2022.
    -->
    id, name, type, price, storage, sales, onsale, sale_price, rate, rate_count, brand, 
    category_id, is_new, pic, active
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Feb 06 18:37:56 EST 2022.
    -->
    description
  </sql>

  <select id="selectByOnsale" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stocked_goods
    where onsale = 1
    order by rand()
    limit 15
  </select>
  <select id="selectByCategory" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stocked_goods
    where category_id in
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
    order by rand()
    limit 6
  </select>
  <select id="selectByFilter" parameterType="com.example.freshonline.dto.SearchParams" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stocked_goods
    <where>
      active=1
      <if test="param!=null and param.price_low!=0">
        and case
        when onsale = 1 then sale_price else price end
        >= ${param.price_low}
      </if>
      <if test="param!=null and param.price_high!=0">
        and case
        when onsale = 1 then sale_price else price end
        &lt;= ${param.price_high}
      </if>
      <if test="param!=null and param.category_id!=null and param.category_id.size>0">
        and category_id in 
        <foreach collection="param.category_id" index="index" item="item" open="(" separator="," close=")" >
          #{item,jdbcType=INTEGER}
        </foreach>
      </if>
      <if test="param!=null and param.keyword!=null">
        and name like CONCAT('%',#{param.keyword},'%')
      </if>
      <if test="param!=null and param.brands!=null and param.brands.size>0">
        and brand in
        <foreach collection="param.brands" index="index" item="item" open="(" separator="," close=")">
          #{item,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
    <if test="param!=null and param.sort_type!=0">
      <if test="param.sort_type==1">
        order by case
        when onsale = 1 then sale_price else price end
        asc
      </if>
      <if test="param.sort_type==2">
        order by case
        when onsale = 1 then sale_price else price end
        desc
      </if>
      <if test="param.sort_type==3">
        order by sales asc
      </if>
      <if test="param.sort_type==4">
        order by sales desc
      </if>
    </if>
    <if test="param!=null and param.item_low!=0 and param.item_high!=0">
      limit ${param.item_low}, ${param.item_high}
    </if>
  </select>
  <resultMap id="InfoResultMap" type="com.example.freshonline.dto.SearchResultInfo">
    <result column="min_price" jdbcType="DECIMAL" property="min_price" />
    <result column="max_price" jdbcType="DECIMAL" property="max_price" />
    <result column="goods_total" jdbcType="INTEGER" property="goods_total" />
    <result column="brand_list" jdbcType="VARCHAR" property="brand_list" />
  </resultMap>
  <select id="searchInfo" parameterType="com.example.freshonline.dto.SearchParams" resultMap="InfoResultMap">
    select min(
    case
    when onsale = 1 then sale_price else price end
    ) as min_price,
    max(
    case
    when onsale = 1 then sale_price else price end
    ) as max_price,
    count(id) as goods_total,
    GROUP_CONCAT(distinct brand, '') as brand_list
    from stocked_goods
    <where>
      active=1
      <if test="param!=null and param.price_low!=0">
        and case
        when onsale = 1 then sale_price else price end
        >= ${param.price_low}
      </if>
      <if test="param!=null and param.price_high!=0">
        and case
        when onsale = 1 then sale_price else price end
        &lt;= ${param.price_high}
      </if>
      <if test="param!=null and param.category_id!=null and param.category_id.size>0">
        and category_id in
        <foreach collection="param.category_id" index="index" item="item" open="(" separator="," close=")">
          #{item,jdbcType=INTEGER}
        </foreach>
      </if>
      <if test="param!=null and param.keyword!=null">
        and name like CONCAT('%',#{param.keyword},'%')
      </if>
      <if test="param!=null and param.brands!=null and param.brands.size>0">
        and brand in
        <foreach collection="param.brands" index="index" item="item" open="(" separator="," close=")">
          #{item,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
  </select>
</mapper>